name: my-project-frontend

on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the main branch
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
  DOCKER_IMAGE_TAG: 1.0.0-${{github.run_number}}
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Install node js
    - name: Setup Node.js environment
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    # Cache node modules
    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: |
        npm ci

    - name: Lint
      run: |
        npm run lint

    - name: Test
      run: |
        npm run test -- --prod

#    # Install required dependencies to build app
#    - name: Install dependencies
#      run: npm ci

    - name: Build code
      run: npm install && npm run cibuild

    - name: Build the Docker image
      run: docker build --tag vigneshsweekaran/easyclaim-frontend:latest .

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/my-project-frontend:${{ env.DOCKER_IMAGE_TAG }}
